// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.14.0
// source: tickets.proto

package tickets

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PrintJob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename         string    `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	Contest          *IdName   `protobuf:"bytes,2,opt,name=contest,proto3" json:"contest,omitempty"`
	Team             *IdName   `protobuf:"bytes,3,opt,name=team,proto3" json:"team,omitempty"`
	Computer         *Computer `protobuf:"bytes,4,opt,name=computer,proto3" json:"computer,omitempty"`
	Area             *IdName   `protobuf:"bytes,5,opt,name=area,proto3" json:"area,omitempty"`
	Data             []byte    `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`
	TimestampSeconds uint64    `protobuf:"varint,7,opt,name=timestamp_seconds,json=timestampSeconds,proto3" json:"timestamp_seconds,omitempty"`
	Printer          string    `protobuf:"bytes,8,opt,name=printer,proto3" json:"printer,omitempty"`
	JobId            string    `protobuf:"bytes,9,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	Charset          string    `protobuf:"bytes,10,opt,name=charset,proto3" json:"charset,omitempty"`
}

func (x *PrintJob) Reset() {
	*x = PrintJob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tickets_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrintJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrintJob) ProtoMessage() {}

func (x *PrintJob) ProtoReflect() protoreflect.Message {
	mi := &file_tickets_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrintJob.ProtoReflect.Descriptor instead.
func (*PrintJob) Descriptor() ([]byte, []int) {
	return file_tickets_proto_rawDescGZIP(), []int{0}
}

func (x *PrintJob) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *PrintJob) GetContest() *IdName {
	if x != nil {
		return x.Contest
	}
	return nil
}

func (x *PrintJob) GetTeam() *IdName {
	if x != nil {
		return x.Team
	}
	return nil
}

func (x *PrintJob) GetComputer() *Computer {
	if x != nil {
		return x.Computer
	}
	return nil
}

func (x *PrintJob) GetArea() *IdName {
	if x != nil {
		return x.Area
	}
	return nil
}

func (x *PrintJob) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *PrintJob) GetTimestampSeconds() uint64 {
	if x != nil {
		return x.TimestampSeconds
	}
	return 0
}

func (x *PrintJob) GetPrinter() string {
	if x != nil {
		return x.Printer
	}
	return ""
}

func (x *PrintJob) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *PrintJob) GetCharset() string {
	if x != nil {
		return x.Charset
	}
	return ""
}

type PrintJobReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobExpandedId    string `protobuf:"bytes,1,opt,name=job_expanded_id,json=jobExpandedId,proto3" json:"job_expanded_id,omitempty"`
	NumPages         int64  `protobuf:"varint,2,opt,name=num_pages,json=numPages,proto3" json:"num_pages,omitempty"`
	ErrorMessage     string `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	TimestampSeconds int64  `protobuf:"varint,4,opt,name=timestamp_seconds,json=timestampSeconds,proto3" json:"timestamp_seconds,omitempty"`
}

func (x *PrintJobReport) Reset() {
	*x = PrintJobReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tickets_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrintJobReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrintJobReport) ProtoMessage() {}

func (x *PrintJobReport) ProtoReflect() protoreflect.Message {
	mi := &file_tickets_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrintJobReport.ProtoReflect.Descriptor instead.
func (*PrintJobReport) Descriptor() ([]byte, []int) {
	return file_tickets_proto_rawDescGZIP(), []int{1}
}

func (x *PrintJobReport) GetJobExpandedId() string {
	if x != nil {
		return x.JobExpandedId
	}
	return ""
}

func (x *PrintJobReport) GetNumPages() int64 {
	if x != nil {
		return x.NumPages
	}
	return 0
}

func (x *PrintJobReport) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *PrintJobReport) GetTimestampSeconds() int64 {
	if x != nil {
		return x.TimestampSeconds
	}
	return 0
}

type TexJob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Printer string `protobuf:"bytes,1,opt,name=printer,proto3" json:"printer,omitempty"`
	Data    []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	JobId   string `protobuf:"bytes,3,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
}

func (x *TexJob) Reset() {
	*x = TexJob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tickets_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TexJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TexJob) ProtoMessage() {}

func (x *TexJob) ProtoReflect() protoreflect.Message {
	mi := &file_tickets_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TexJob.ProtoReflect.Descriptor instead.
func (*TexJob) Descriptor() ([]byte, []int) {
	return file_tickets_proto_rawDescGZIP(), []int{2}
}

func (x *TexJob) GetPrinter() string {
	if x != nil {
		return x.Printer
	}
	return ""
}

func (x *TexJob) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *TexJob) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

type BinaryJob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Printer string `protobuf:"bytes,1,opt,name=printer,proto3" json:"printer,omitempty"`
	Data    []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	JobId   string `protobuf:"bytes,3,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	Pages   int64  `protobuf:"varint,4,opt,name=pages,proto3" json:"pages,omitempty"`
}

func (x *BinaryJob) Reset() {
	*x = BinaryJob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tickets_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BinaryJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BinaryJob) ProtoMessage() {}

func (x *BinaryJob) ProtoReflect() protoreflect.Message {
	mi := &file_tickets_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BinaryJob.ProtoReflect.Descriptor instead.
func (*BinaryJob) Descriptor() ([]byte, []int) {
	return file_tickets_proto_rawDescGZIP(), []int{3}
}

func (x *BinaryJob) GetPrinter() string {
	if x != nil {
		return x.Printer
	}
	return ""
}

func (x *BinaryJob) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *BinaryJob) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *BinaryJob) GetPages() int64 {
	if x != nil {
		return x.Pages
	}
	return 0
}

type IdName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *IdName) Reset() {
	*x = IdName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tickets_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdName) ProtoMessage() {}

func (x *IdName) ProtoReflect() protoreflect.Message {
	mi := &file_tickets_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdName.ProtoReflect.Descriptor instead.
func (*IdName) Descriptor() ([]byte, []int) {
	return file_tickets_proto_rawDescGZIP(), []int{4}
}

func (x *IdName) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *IdName) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Computer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Computer) Reset() {
	*x = Computer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tickets_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Computer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Computer) ProtoMessage() {}

func (x *Computer) ProtoReflect() protoreflect.Message {
	mi := &file_tickets_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Computer.ProtoReflect.Descriptor instead.
func (*Computer) Descriptor() ([]byte, []int) {
	return file_tickets_proto_rawDescGZIP(), []int{5}
}

func (x *Computer) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Computer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Ticket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contest   *IdName          `protobuf:"bytes,1,opt,name=contest,proto3" json:"contest,omitempty"`
	Team      *IdName          `protobuf:"bytes,2,opt,name=team,proto3" json:"team,omitempty"`
	Area      *IdName          `protobuf:"bytes,3,opt,name=area,proto3" json:"area,omitempty"`
	Computer  *Computer        `protobuf:"bytes,4,opt,name=computer,proto3" json:"computer,omitempty"`
	Problem   *Ticket_Problem  `protobuf:"bytes,5,opt,name=problem,proto3" json:"problem,omitempty"`
	SubmitId  uint32           `protobuf:"varint,6,opt,name=submit_id,json=submitId,proto3" json:"submit_id,omitempty"`
	JudgeTime uint64           `protobuf:"varint,7,opt,name=judge_time,json=judgeTime,proto3" json:"judge_time,omitempty"`
	Submit    []*Ticket_Submit `protobuf:"bytes,8,rep,name=submit,proto3" json:"submit,omitempty"`
	Printer   string           `protobuf:"bytes,9,opt,name=printer,proto3" json:"printer,omitempty"` // string now, replace with id
}

func (x *Ticket) Reset() {
	*x = Ticket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tickets_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ticket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ticket) ProtoMessage() {}

func (x *Ticket) ProtoReflect() protoreflect.Message {
	mi := &file_tickets_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ticket.ProtoReflect.Descriptor instead.
func (*Ticket) Descriptor() ([]byte, []int) {
	return file_tickets_proto_rawDescGZIP(), []int{6}
}

func (x *Ticket) GetContest() *IdName {
	if x != nil {
		return x.Contest
	}
	return nil
}

func (x *Ticket) GetTeam() *IdName {
	if x != nil {
		return x.Team
	}
	return nil
}

func (x *Ticket) GetArea() *IdName {
	if x != nil {
		return x.Area
	}
	return nil
}

func (x *Ticket) GetComputer() *Computer {
	if x != nil {
		return x.Computer
	}
	return nil
}

func (x *Ticket) GetProblem() *Ticket_Problem {
	if x != nil {
		return x.Problem
	}
	return nil
}

func (x *Ticket) GetSubmitId() uint32 {
	if x != nil {
		return x.SubmitId
	}
	return 0
}

func (x *Ticket) GetJudgeTime() uint64 {
	if x != nil {
		return x.JudgeTime
	}
	return 0
}

func (x *Ticket) GetSubmit() []*Ticket_Submit {
	if x != nil {
		return x.Submit
	}
	return nil
}

func (x *Ticket) GetPrinter() string {
	if x != nil {
		return x.Printer
	}
	return ""
}

type Ticket_Submit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubmitNumber uint32                `protobuf:"varint,1,opt,name=submit_number,json=submitNumber,proto3" json:"submit_number,omitempty"`
	Arrived      uint64                `protobuf:"varint,2,opt,name=arrived,proto3" json:"arrived,omitempty"`
	Compiled     bool                  `protobuf:"varint,3,opt,name=compiled,proto3" json:"compiled,omitempty"`
	School       *Ticket_Submit_School `protobuf:"bytes,4,opt,name=school,proto3" json:"school,omitempty"`
	Acm          *Ticket_Submit_ACM    `protobuf:"bytes,5,opt,name=acm,proto3" json:"acm,omitempty"`
}

func (x *Ticket_Submit) Reset() {
	*x = Ticket_Submit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tickets_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ticket_Submit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ticket_Submit) ProtoMessage() {}

func (x *Ticket_Submit) ProtoReflect() protoreflect.Message {
	mi := &file_tickets_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ticket_Submit.ProtoReflect.Descriptor instead.
func (*Ticket_Submit) Descriptor() ([]byte, []int) {
	return file_tickets_proto_rawDescGZIP(), []int{6, 0}
}

func (x *Ticket_Submit) GetSubmitNumber() uint32 {
	if x != nil {
		return x.SubmitNumber
	}
	return 0
}

func (x *Ticket_Submit) GetArrived() uint64 {
	if x != nil {
		return x.Arrived
	}
	return 0
}

func (x *Ticket_Submit) GetCompiled() bool {
	if x != nil {
		return x.Compiled
	}
	return false
}

func (x *Ticket_Submit) GetSchool() *Ticket_Submit_School {
	if x != nil {
		return x.School
	}
	return nil
}

func (x *Ticket_Submit) GetAcm() *Ticket_Submit_ACM {
	if x != nil {
		return x.Acm
	}
	return nil
}

type Ticket_Problem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Ticket_Problem) Reset() {
	*x = Ticket_Problem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tickets_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ticket_Problem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ticket_Problem) ProtoMessage() {}

func (x *Ticket_Problem) ProtoReflect() protoreflect.Message {
	mi := &file_tickets_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ticket_Problem.ProtoReflect.Descriptor instead.
func (*Ticket_Problem) Descriptor() ([]byte, []int) {
	return file_tickets_proto_rawDescGZIP(), []int{6, 1}
}

func (x *Ticket_Problem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Ticket_Problem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Ticket_Submit_School struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TestsTaken  uint32 `protobuf:"varint,1,opt,name=tests_taken,json=testsTaken,proto3" json:"tests_taken,omitempty"`
	TestsPassed uint32 `protobuf:"varint,2,opt,name=tests_passed,json=testsPassed,proto3" json:"tests_passed,omitempty"`
}

func (x *Ticket_Submit_School) Reset() {
	*x = Ticket_Submit_School{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tickets_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ticket_Submit_School) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ticket_Submit_School) ProtoMessage() {}

func (x *Ticket_Submit_School) ProtoReflect() protoreflect.Message {
	mi := &file_tickets_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ticket_Submit_School.ProtoReflect.Descriptor instead.
func (*Ticket_Submit_School) Descriptor() ([]byte, []int) {
	return file_tickets_proto_rawDescGZIP(), []int{6, 0, 0}
}

func (x *Ticket_Submit_School) GetTestsTaken() uint32 {
	if x != nil {
		return x.TestsTaken
	}
	return 0
}

func (x *Ticket_Submit_School) GetTestsPassed() uint32 {
	if x != nil {
		return x.TestsPassed
	}
	return 0
}

type Ticket_Submit_ACM struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"` // replace with uint32 and map
	TestId uint32 `protobuf:"varint,2,opt,name=test_id,json=testId,proto3" json:"test_id,omitempty"`
}

func (x *Ticket_Submit_ACM) Reset() {
	*x = Ticket_Submit_ACM{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tickets_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ticket_Submit_ACM) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ticket_Submit_ACM) ProtoMessage() {}

func (x *Ticket_Submit_ACM) ProtoReflect() protoreflect.Message {
	mi := &file_tickets_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ticket_Submit_ACM.ProtoReflect.Descriptor instead.
func (*Ticket_Submit_ACM) Descriptor() ([]byte, []int) {
	return file_tickets_proto_rawDescGZIP(), []int{6, 0, 1}
}

func (x *Ticket_Submit_ACM) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *Ticket_Submit_ACM) GetTestId() uint32 {
	if x != nil {
		return x.TestId
	}
	return 0
}

var File_tickets_proto protoreflect.FileDescriptor

var file_tickets_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x22, 0xd6, 0x02, 0x0a, 0x08, 0x50, 0x72, 0x69,
	0x6e, 0x74, 0x4a, 0x6f, 0x62, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x29, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x49, 0x64, 0x4e,
	0x61, 0x6d, 0x65, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x04,
	0x74, 0x65, 0x61, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x73, 0x2e, 0x49, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x74, 0x65, 0x61,
	0x6d, 0x12, 0x2d, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x43, 0x6f,
	0x6d, 0x70, 0x75, 0x74, 0x65, 0x72, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x72,
	0x12, 0x23, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x49, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x52,
	0x04, 0x61, 0x72, 0x65, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2b, 0x0a, 0x11, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x53,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x72, 0x73,
	0x65, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x72, 0x73, 0x65,
	0x74, 0x22, 0xa7, 0x01, 0x0a, 0x0e, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x4a, 0x6f, 0x62, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x6a, 0x6f, 0x62, 0x5f, 0x65, 0x78, 0x70, 0x61,
	0x6e, 0x64, 0x65, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6a,
	0x6f, 0x62, 0x45, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x65, 0x64, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x6e, 0x75, 0x6d, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x6e, 0x75, 0x6d, 0x50, 0x61, 0x67, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2b,
	0x0a, 0x11, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x73, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x4d, 0x0a, 0x06, 0x54,
	0x65, 0x78, 0x4a, 0x6f, 0x62, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x22, 0x66, 0x0a, 0x09, 0x42, 0x69,
	0x6e, 0x61, 0x72, 0x79, 0x4a, 0x6f, 0x62, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x61, 0x67,
	0x65, 0x73, 0x22, 0x2c, 0x0a, 0x06, 0x49, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x2e, 0x0a, 0x08, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0xe5, 0x05, 0x0a, 0x06, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x29, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x49, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x65, 0x61, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x49,
	0x64, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x74, 0x65, 0x61, 0x6d, 0x12, 0x23, 0x0a, 0x04, 0x61,
	0x72, 0x65, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x2e, 0x49, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61,
	0x12, 0x2d, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x43, 0x6f, 0x6d,
	0x70, 0x75, 0x74, 0x65, 0x72, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x72, 0x12,
	0x31, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x2e, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x62, 0x6c,
	0x65, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2e,
	0x0a, 0x06, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e,
	0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x06, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x1a, 0xce, 0x02, 0x0a, 0x06, 0x53, 0x75, 0x62,
	0x6d, 0x69, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x72, 0x72, 0x69,
	0x76, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x61, 0x72, 0x72, 0x69, 0x76,
	0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x64, 0x12, 0x35,
	0x0a, 0x06, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e,
	0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x2e, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x52, 0x06, 0x73,
	0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x12, 0x2c, 0x0a, 0x03, 0x61, 0x63, 0x6d, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x54, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x2e, 0x41, 0x43, 0x4d, 0x52, 0x03,
	0x61, 0x63, 0x6d, 0x1a, 0x4c, 0x0a, 0x06, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x12, 0x1f, 0x0a,
	0x0b, 0x74, 0x65, 0x73, 0x74, 0x73, 0x5f, 0x74, 0x61, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x74, 0x65, 0x73, 0x74, 0x73, 0x54, 0x61, 0x6b, 0x65, 0x6e, 0x12, 0x21,
	0x0a, 0x0c, 0x74, 0x65, 0x73, 0x74, 0x73, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x74, 0x65, 0x73, 0x74, 0x73, 0x50, 0x61, 0x73, 0x73, 0x65,
	0x64, 0x1a, 0x36, 0x0a, 0x03, 0x41, 0x43, 0x4d, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x74, 0x65, 0x73, 0x74, 0x49, 0x64, 0x1a, 0x2d, 0x0a, 0x07, 0x50, 0x72, 0x6f,
	0x62, 0x6c, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x65, 0x72,
	0x2f, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x33, 0x2f, 0x74, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tickets_proto_rawDescOnce sync.Once
	file_tickets_proto_rawDescData = file_tickets_proto_rawDesc
)

func file_tickets_proto_rawDescGZIP() []byte {
	file_tickets_proto_rawDescOnce.Do(func() {
		file_tickets_proto_rawDescData = protoimpl.X.CompressGZIP(file_tickets_proto_rawDescData)
	})
	return file_tickets_proto_rawDescData
}

var file_tickets_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_tickets_proto_goTypes = []interface{}{
	(*PrintJob)(nil),             // 0: tickets.PrintJob
	(*PrintJobReport)(nil),       // 1: tickets.PrintJobReport
	(*TexJob)(nil),               // 2: tickets.TexJob
	(*BinaryJob)(nil),            // 3: tickets.BinaryJob
	(*IdName)(nil),               // 4: tickets.IdName
	(*Computer)(nil),             // 5: tickets.Computer
	(*Ticket)(nil),               // 6: tickets.Ticket
	(*Ticket_Submit)(nil),        // 7: tickets.Ticket.Submit
	(*Ticket_Problem)(nil),       // 8: tickets.Ticket.Problem
	(*Ticket_Submit_School)(nil), // 9: tickets.Ticket.Submit.School
	(*Ticket_Submit_ACM)(nil),    // 10: tickets.Ticket.Submit.ACM
}
var file_tickets_proto_depIdxs = []int32{
	4,  // 0: tickets.PrintJob.contest:type_name -> tickets.IdName
	4,  // 1: tickets.PrintJob.team:type_name -> tickets.IdName
	5,  // 2: tickets.PrintJob.computer:type_name -> tickets.Computer
	4,  // 3: tickets.PrintJob.area:type_name -> tickets.IdName
	4,  // 4: tickets.Ticket.contest:type_name -> tickets.IdName
	4,  // 5: tickets.Ticket.team:type_name -> tickets.IdName
	4,  // 6: tickets.Ticket.area:type_name -> tickets.IdName
	5,  // 7: tickets.Ticket.computer:type_name -> tickets.Computer
	8,  // 8: tickets.Ticket.problem:type_name -> tickets.Ticket.Problem
	7,  // 9: tickets.Ticket.submit:type_name -> tickets.Ticket.Submit
	9,  // 10: tickets.Ticket.Submit.school:type_name -> tickets.Ticket.Submit.School
	10, // 11: tickets.Ticket.Submit.acm:type_name -> tickets.Ticket.Submit.ACM
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_tickets_proto_init() }
func file_tickets_proto_init() {
	if File_tickets_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tickets_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrintJob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tickets_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrintJobReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tickets_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TexJob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tickets_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BinaryJob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tickets_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tickets_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Computer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tickets_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ticket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tickets_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ticket_Submit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tickets_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ticket_Problem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tickets_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ticket_Submit_School); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tickets_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ticket_Submit_ACM); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tickets_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tickets_proto_goTypes,
		DependencyIndexes: file_tickets_proto_depIdxs,
		MessageInfos:      file_tickets_proto_msgTypes,
	}.Build()
	File_tickets_proto = out.File
	file_tickets_proto_rawDesc = nil
	file_tickets_proto_goTypes = nil
	file_tickets_proto_depIdxs = nil
}
